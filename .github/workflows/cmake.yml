# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  # BUILD_TYPE: Release
  BUILD_DEPS: make cmake autoconf g++ ninja-build libssl-dev libcurl4-openssl-dev zlib1g-dev libboost-all-dev

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        generator: [Unix Makefiles, Ninja]
        build_type: [Debug, Release]

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update -yq
          sudo apt-get install -y --no-install-recommends ${{BUILD_DEPS}}

      - name: Configure CMake
        run: |
          mkdir build-${{matrix.build_type}}
          cmake -G "${{matrix.generator}}" -B ${{github.workspace}}/build-${{matrix.build_type}} -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DUSE_OPENSSL=ON -DBUILD_TEST=ON .

      - name: Build
        run: |
          cmake --build ${{github.workspace}}/build-${{matrix.build_type}}

      - name: Test
        working-directory: ${{github.workspace}}/build-${{matrix.build_type}}
        run: ctest -C ${{matrix.build_type}}

